En el código de distribución hay un proyecto de Django llamado comercio
 que contiene una única aplicación llamada subastas.

Primero, abra subastas/urls.py, donde se define la configuración de URL
 para esta aplicación. 
Tenga en cuenta que ya hemos escrito algunas URL para usted, 
incluida una ruta de índice predeterminada,
 una ruta /login, una ruta /logout y una ruta /register.

Eche un vistazo a subastas/views.py para ver las vistas asociadas 
con cada una de estas rutas. 
La vista de índice por ahora devuelve una plantilla index.html casi vacía.
 La vista login_view muestra un formulario de inicio de sesión
  cuando un usuario intenta OBTENER la página. 
 Cuando un usuario envía el formulario utilizando el método de 
 solicitud POST, el usuario se autentica, 
 inicia sesión y se le redirige a la página de índice
 . La vista logout_view cierra la sesión del usuario 
 y lo redirige a la página de índice. 
 Finalmente, la ruta de registro muestra un formulario de 
 registro al 
 usuario y crea un nuevo usuario cuando se envía el formulario. 
 Todo esto se hace por usted en el código de 
 distribución, por lo que debería poder ejecutar la aplicación 
 ahora para crear algunos usuarios.

Ejecute python Manage.py RunServer para iniciar el servidor
 web Django y visite el sitio web en su navegador. 
Haga clic en "Registrarse" y regístrese para obtener 
una cuenta. Debería ver que ahora ha iniciado sesión 
como su cuenta de usuario y 
que los enlaces en la parte superior de la página han cambiado. 
¿Cómo cambió el HTML? 
Eche un vistazo a subastas/templates/auctions/layout.html 
para ver el diseño HTML de esta aplicación. 
Tenga en cuenta que varias partes de la plantilla
 están incluidas en una verificación de if user.is_authentication,
  de modo que se puede 
 representar contenido diferente dependiendo 
 de si el usuario ha iniciado sesión o no. 
 ¡Puedes cambiar este archivo si deseas agregar o 
 modificar algo en el diseño!

Finalmente, eche un vistazo a subastas/modelos.py. 
Aquí es donde definirá cualquier modelo 
para su aplicación web, 
donde cada modelo representa 
algún tipo de datos que desea almacenar 
en su base de datos. 
Comenzamos con un modelo de Usuario que representa a cada usuario 
de la aplicación. D
ebido a que hereda de AbstractUser,
 ya tendrá campos para un nombre de usuario,
 correo electrónico, contraseña, etc., 
 pero puede agregar nuevos campos a la clase Usuario si 
 hay información adicional sobre un usuario 
 que desea representar. También deberá agregar modelos 
 adicionales a este archivo para representar detalles sobre listados de subastas, ofertas, comentarios
  y categorías de subastas. Recuerde que cada vez que cambie algo en subastas/models.py, 
  primero deberá ejecutar python Manage.py makemigrations y luego python Manage.py migrar 
  para migrar esos cambios a su base de datos.